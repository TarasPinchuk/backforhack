{
  "openapi": "3.0.3",
  "info": {
    "title": "legacy-hakaton-mvp0 API",
    "description": "тут должно быть серьёзное название",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://127.0.0.1:8000",
      "description": "Local server"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Auth"
    }
  ],
  "paths": {
    "/api/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Регистрация",
        "operationId": "authRegister",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Успешно",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTokenPairResponse"
                }
              }
            }
          },
          "422": {
            "description": "Ошибка валидации",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Логин",
        "operationId": "authLogin",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTokenPairResponse"
                }
              }
            }
          },
          "422": {
            "description": "Неверные учётные данные",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/me": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Текущий пользователь",
        "operationId": "authMe",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MeResponse"
                }
              }
            }
          },
          "401": {
            "description": "Неавторизован",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseBase"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Выход (инвалидация токенов)",
        "operationId": "authLogout",
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "refresh_token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1..."
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseBase"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/auth/refresh": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Обновление access по refresh",
        "operationId": "authRefresh",
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTokenPairResponse"
                }
              }
            }
          },
          "400": {
            "description": "Некорректный/отсутствующий токен",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseBase"
                }
              }
            }
          },
          "401": {
            "description": "Истёк/невалиден",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/yandex/url": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Получить URL для авторизации в Яндекс / принять callback",
        "operationId": "authYandexUrl",
        "responses": {
          "200": {
            "description": "Ссылка для авторизации ИЛИ callback с кодом",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/YandexUrlResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/yandex/exchange": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Обмен кода на токены Яндекс и вход",
        "operationId": "authYandexExchange",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/YandexExchangeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTokenPairResponse"
                }
              }
            }
          },
          "400": {
            "description": "Ошибка обмена кода/получения профайла",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/places/health": {
      "get": {
        "tags": [
          "system"
        ],
        "summary": "Health",
        "operationId": "health_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/places/places": {
      "post": {
        "tags": [
          "places"
        ],
        "summary": "Create Place",
        "operationId": "create_place_places_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlaceCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlaceOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "places"
        ],
        "summary": "List Places",
        "operationId": "list_places_places_get",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 500,
              "minimum": 1,
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PlaceOut"
                  },
                  "title": "Response List Places Places Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/places/places/{place_id}": {
      "get": {
        "tags": [
          "places"
        ],
        "summary": "Get Place",
        "operationId": "get_place_places__place_id__get",
        "parameters": [
          {
            "name": "place_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Place Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlaceOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "places"
        ],
        "summary": "Patch Place",
        "operationId": "patch_place_places__place_id__patch",
        "parameters": [
          {
            "name": "place_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Place Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlacePatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlaceOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "places"
        ],
        "summary": "Delete Place",
        "operationId": "delete_place_places__place_id__delete",
        "parameters": [
          {
            "name": "place_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Place Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ApiResponseBase": {
        "required": [
          "statusCode",
          "message"
        ],
        "properties": {
          "statusCode": {
            "description": "{\n  \"statusCode\": 200,\n  \"message\": \"OK\",\n}",
            "type": "integer",
            "example": 200
          },
          "message": {
            "type": "string",
            "example": "OK"
          }
        },
        "type": "object"
      },
      "TokenPair": {
        "required": [
          "access_token",
          "expires_in",
          "refresh_token",
          "refresh_expires_in"
        ],
        "properties": {
          "access_token": {
            "type": "string",
            "example": "eyJhbGciOi..."
          },
          "expires_in": {
            "type": "integer",
            "example": 3600
          },
          "refresh_token": {
            "type": "string",
            "example": "eyJhbGciOi..."
          },
          "refresh_expires_in": {
            "type": "integer",
            "example": 1209600
          },
          "role": {
            "type": "integer",
            "example": 0
          }
        },
        "type": "object"
      },
      "RegisterRequest": {
        "required": [
          "login",
          "password"
        ],
        "properties": {
          "login": {
            "type": "string",
            "example": "ZOV"
          },
          "password": {
            "type": "string",
            "example": "GOYDASVO"
          }
        },
        "type": "object"
      },
      "LoginRequest": {
        "required": [
          "login",
          "password"
        ],
        "properties": {
          "login": {
            "type": "string",
            "example": "ZOV"
          },
          "password": {
            "type": "string",
            "example": "GOYDASVO"
          }
        },
        "type": "object"
      },
      "RefreshRequest": {
        "properties": {
          "refresh_token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1..."
          }
        },
        "type": "object"
      },
      "User": {
        "required": [
          "login",
          "id",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "login": {
            "type": "string",
            "example": "ZOV"
          },
          "updated_at": {
            "type": "string",
            "example": "2025-10-12T11:31:47.661000Z"
          },
          "created_at": {
            "type": "string",
            "example": "2025-10-12T11:31:47.661000Z"
          },
          "id": {
            "type": "string",
            "example": "68eb91a3b5bc2188710e0e92"
          }
        },
        "type": "object"
      },
      "YandexAuthUrl": {
        "required": [
          "auth_url"
        ],
        "properties": {
          "auth_url": {
            "type": "string",
            "example": "https://oauth.yandex.ru/authorize?response_type=code&client_id=...&redirect_uri=...&scope=login:info&force_confirm=yes"
          }
        },
        "type": "object"
      },
      "YandexCallbackPayload": {
        "required": [
          "code",
          "redirect_with_code"
        ],
        "properties": {
          "code": {
            "type": "string",
            "example": "57bpy27qfk7n7i6o"
          },
          "state": {
            "type": "string",
            "example": "optional-state",
            "nullable": true
          },
          "cid": {
            "type": "string",
            "example": "7kyx8crjpnqxa52zz83e9kp724",
            "nullable": true
          },
          "redirect_with_code": {
            "type": "string",
            "example": "http://127.0.0.1:3000/Personal?code=57bpy27qfk7n7i6o&cid=7kyx8c...&state=optional-state"
          }
        },
        "type": "object"
      },
      "AuthTokenPairResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiResponseBase"
          },
          {
            "$ref": "#/components/schemas/TokenPair"
          }
        ]
      },
      "MeResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiResponseBase"
          },
          {
            "$ref": "#/components/schemas/User"
          }
        ]
      },
      "YandexAuthUrlResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiResponseBase"
          },
          {
            "$ref": "#/components/schemas/YandexAuthUrl"
          }
        ]
      },
      "YandexCallbackResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiResponseBase"
          },
          {
            "$ref": "#/components/schemas/YandexCallbackPayload"
          }
        ]
      },
      "YandexExchangeRequest": {
        "required": [
          "code"
        ],
        "properties": {
          "code": {
            "type": "string",
            "example": "57bpy27qfk7n7i6o"
          }
        },
        "type": "object"
      },
      "YandexUrlResponse": {
        "required": [
          "statusCode",
          "message"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiResponseBase"
          },
          {
            "properties": {
              "auth_url": {
                "type": "string",
                "example": "https://oauth.yandex.ru/authorize?response_type=code&client_id=...&redirect_uri=...&scope=login:info&force_confirm=yes",
                "nullable": true
              },
              "redirect_with_code": {
                "type": "string",
                "example": "http://127.0.0.1:3000/Personal?code=57bpy27qfk7n7i6o&cid=7kyx8c...",
                "nullable": true
              }
            },
            "type": "object"
          }
        ]
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "PlaceCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Название места",
            "examples": [
              "Кофейня «Маяк»"
            ]
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Описание"
          },
          "photos": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "maxLength": 2083,
                  "minLength": 1,
                  "format": "uri"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Photos",
            "description": "Список ссылок на фото",
            "examples": [
              [
                "https://cdn.example.com/p/1.jpg",
                "https://cdn.example.com/p/2.jpg"
              ]
            ]
          },
          "review_widget_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2083,
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Review Widget Url",
            "description": "Ссылка на виджет отзывов",
            "examples": [
              "https://reviews.example.com/widget?id=123"
            ]
          },
          "lat": {
            "type": "number",
            "maximum": 90,
            "minimum": -90,
            "title": "Lat",
            "description": "Широта",
            "examples": [
              55.7558
            ]
          },
          "lon": {
            "type": "number",
            "maximum": 180,
            "minimum": -180,
            "title": "Lon",
            "description": "Долгота",
            "examples": [
              37.6173
            ]
          }
        },
        "type": "object",
        "required": [
          "name",
          "lat",
          "lon"
        ],
        "title": "PlaceCreate"
      },
      "PlaceOut": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Идентификатор места (Mongo ObjectId)"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "photos": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Photos"
          },
          "review_widget_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Review Widget Url"
          },
          "lat": {
            "type": "number",
            "title": "Lat"
          },
          "lon": {
            "type": "number",
            "title": "Lon"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "lat",
          "lon",
          "created_at",
          "updated_at"
        ],
        "title": "PlaceOut"
      },
      "PlacePatch": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "Название"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Описание"
          },
          "photos": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "maxLength": 2083,
                  "minLength": 1,
                  "format": "uri"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Photos",
            "description": "Ссылки на фото"
          },
          "review_widget_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2083,
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Review Widget Url",
            "description": "URL виджета отзывов"
          },
          "lat": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 90,
                "minimum": -90
              },
              {
                "type": "null"
              }
            ],
            "title": "Lat",
            "description": "Широта"
          },
          "lon": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 180,
                "minimum": -180
              },
              {
                "type": "null"
              }
            ],
            "title": "Lon",
            "description": "Долгота"
          }
        },
        "type": "object",
        "title": "PlacePatch"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "bearerFormat": "JWT",
        "scheme": "bearer"
      }
    }
  }
}